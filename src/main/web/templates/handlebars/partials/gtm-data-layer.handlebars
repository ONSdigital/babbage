<script>

    // getUsageCookieValue reads the cookies_policy cookie and returns the value a user has set for usage, 
    // or defaults to true to opt_out of usage cookie if no cookie is set, or theres an error getting the value
    function getUsageCookieValue() {
        // TODO: this is the legacy cookie (cookies_policy) handling and will be removed in due course
        var legacyCookiePolicy = document.cookie.match('(^|;) ?cookies_policy=([^;]*)(;|$)');
        if (legacyCookiePolicy) {
            console.debug('legacy cookies_policy found');
            var decodedCookie = decodeURIComponent(legacyCookiePolicy[2]);
            var cookieValue = JSON.parse(decodedCookie);
            console.debug('usage is', cookieValue.usage);
            return !cookieValue.usage
        }

        // ons_cookie_policy handler
        var policyCookie = document.cookie.match(/^(.*)?\s*'usage':true\s*[^;]+(.*)?$/);
        if (policyCookie) {
            console.debug('ons_cookie_policy found - opting in');
            // this needs to be the inverse - if usage is true the returned value is false and vice versa
            // user is stating whether they are opting out of usage cookie
            return false
        }

        console.debug('no cookie found - opting out');
        return true

    }

    // unescape html entities
    function htmlUnescape(str){
        return str
                .replace(/&#x3D;/g, "=");
    }

    {{!-- Add title to dataLayer. Dont include the edition on dataset versions pages --}}
    var dataLayer = [{
        contentTitle: htmlUnescape("{{> partials/page-title}}{{#if description.edition}}{{#if_ne description.edition "Current"}}: {{description.edition}}{{/if_ne}}{{/if}}"),
        analyticsOptOut: getUsageCookieValue(),
        "gtm.whitelist": ["google","hjtc","lcl"],
        "gtm.blacklist": ["customScripts","sp","adm","awct","k","d","j"]
    }];

    {{#if description.releaseDate}}
    dataLayer[0]["releaseDate"] = "{{df description.releaseDate outputFormat='yyyy/MM/dd'}}";
    {{/if}}

    {{#if result.numberOfResults}}
    dataLayer[0]["numberOfResults"] = {{result.numberOfResults}};
    {{/if}}

    {{!-- Add the related publication into the Google Tag Manager data layer object --}}
    {{#if_any (eq type "dataset_landing_page") (eq type "timeseries")}}
        dataLayer[0]["publications"] = [];
        {{#if relatedDocuments}}
            {{#each relatedDocuments}}
                {{#resolve this.uri filter="title"}}
                    dataLayer[0].publications.push({
                        title: "{{title}}{{#if edition}}: {{edition}}{{/if}}",
                        uri: "{{uri}}"
                    });
                {{/resolve}}
            {{/each}}
        {{/if}}
    {{/if_any}}


    {{!-- Add latest release info to dataLayer --}}
    {{#if_any (eq type "bulletin") (eq type "article") (eq type "compendium_landing_page") (eq type "compendium_chapter")}}
        {{#unless (endsWith (parentPath uri) "previous")}}
            {{#if description.latestRelease}}
                dataLayer[0]["latestRelease"] = "yes";
                dataLayer[0]["url"] = "{{uri}}";
            {{else}}
                dataLayer[0]["latestRelease"] = "no";
            {{/if}}
        {{else}}
            dataLayer[0]["latestRelease"] = "no";
        {{/unless}}
    {{/if_any}}

    {{!-- Add word count for sections to dataLayer --}}
    {{#if_any (eq type "bulletin") (eq type "article")}}
        {{#if sections}}
            dataLayer[0]["wordCount"] = {{totalWordCount sections}}
        {{/if}}
    {{/if_any}}

    {{!-- Update Google Tag Manager data layer with information about corrections and notices --}}
    {{#if alerts}}
        {{#each alerts}}
            {{#if_eq type "correction"}}
                {{#assign "hasCorrections"}}
                true
                {{/assign}}
            {{/if_eq}}

            {{#if_eq type "alert"}}
                {{#assign "hasAlerts"}}
                true
                {{/assign}}
            {{/if_eq}}
        {{/each}}

        {{#if_ne type "dataset"}}
            {{#if hasCorrections}}
                dataLayer[0]["corrections"] = "yes";
            {{else}}
                dataLayer[0]["corrections"] = "no";
            {{/if}}
            {{#if hasAlerts}}
                dataLayer[0]["notices"] = "yes";
            {{else}}
                dataLayer[0]["notices"] = "no";
            {{/if}}
        {{/if_ne}}

    {{/if}}

    {{#if versions}}
        {{#each versions}}
            {{#if correctionNotice}}
                {{#assign "hasCorrections"}}
                true
                {{/assign}}
            {{/if}}
        {{/each}}

        {{#if_ne type "dataset"}}
            {{#if hasCorrections}}
                dataLayer[0]["corrections"] = "yes";
            {{else}}
                dataLayer[0]["corrections"] = "no";
            {{/if}}
        {{/if_ne}}
    {{/if}}

</script>
